// <auto-generated />
using System;
using ChatTeamChallenge.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatTeamChallenge.Persistence.Migrations
{
    [DbContext(typeof(ChatTeamChallengeDbContext))]
    [Migration("20240103092203_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Chats", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 845, DateTimeKind.Utc).AddTicks(1507),
                            IsPublic = true,
                            Topic = "General"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 845, DateTimeKind.Utc).AddTicks(1907),
                            IsPublic = false,
                            Topic = "Artist"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 845, DateTimeKind.Utc).AddTicks(1915),
                            IsPublic = false,
                            Topic = "Creator"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 845, DateTimeKind.Utc).AddTicks(1922),
                            IsPublic = false,
                            Topic = "Designer"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 845, DateTimeKind.Utc).AddTicks(1955),
                            IsPublic = false,
                            Topic = "Dancer"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 845, DateTimeKind.Utc).AddTicks(1959),
                            IsPublic = false,
                            Topic = "Videographer"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 845, DateTimeKind.Utc).AddTicks(1962),
                            IsPublic = false,
                            Topic = "Photographer"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 845, DateTimeKind.Utc).AddTicks(1967),
                            IsPublic = false,
                            Topic = "Painter"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 845, DateTimeKind.Utc).AddTicks(1969),
                            IsPublic = false,
                            Topic = "Musician"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 845, DateTimeKind.Utc).AddTicks(1972),
                            IsPublic = false,
                            Topic = "Writer"
                        });
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.ChatMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMembers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 988, DateTimeKind.Utc).AddTicks(8343),
                            Role = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 988, DateTimeKind.Utc).AddTicks(8384),
                            Role = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 3,
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 988, DateTimeKind.Utc).AddTicks(8391),
                            Role = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 988, DateTimeKind.Utc).AddTicks(8397),
                            Role = 0,
                            UserId = 10
                        },
                        new
                        {
                            Id = 5,
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 988, DateTimeKind.Utc).AddTicks(8403),
                            Role = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 988, DateTimeKind.Utc).AddTicks(8408),
                            Role = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 7,
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 988, DateTimeKind.Utc).AddTicks(8412),
                            Role = 0,
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 988, DateTimeKind.Utc).AddTicks(8418),
                            Role = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 988, DateTimeKind.Utc).AddTicks(8422),
                            Role = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 10,
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 988, DateTimeKind.Utc).AddTicks(8426),
                            Role = 1,
                            UserId = 9
                        });
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("SenderUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Messages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Principal Checking Account Borders holistic Pula Intelligent bypass heuristic deposit visualize",
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 990, DateTimeKind.Utc).AddTicks(8495),
                            IsRead = false,
                            ReceiverId = 5,
                            SenderId = 2,
                            SenderUserName = "Muriel85"
                        },
                        new
                        {
                            Id = 2,
                            Body = "deposit Avon Frozen methodologies Arkansas Rustic Small Underpass Jewelery deposit",
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 990, DateTimeKind.Utc).AddTicks(8623),
                            IsRead = true,
                            ReceiverId = 7,
                            SenderId = 7,
                            SenderUserName = "Ettie.Schaefer"
                        },
                        new
                        {
                            Id = 3,
                            Body = "payment Shoes & Music Ohio Communications Lead US Dollar Buckinghamshire Regional Streamlined Fantastic Metal Chair",
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 990, DateTimeKind.Utc).AddTicks(8749),
                            IsRead = false,
                            ReceiverId = 10,
                            SenderId = 7,
                            SenderUserName = "Dulce.Macejkovic64"
                        },
                        new
                        {
                            Id = 4,
                            Body = "Optimized Bedfordshire Plastic calculate haptic haptic 3rd generation Islands Cambridgeshire Investment Account",
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 990, DateTimeKind.Utc).AddTicks(8788),
                            IsRead = true,
                            ReceiverId = 9,
                            SenderId = 7,
                            SenderUserName = "Alexanne_Lowe"
                        },
                        new
                        {
                            Id = 5,
                            Body = "Personal Loan Account International transmitting Direct Checking Account encoding Plastic generating users radical",
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 990, DateTimeKind.Utc).AddTicks(8829),
                            IsRead = true,
                            ReceiverId = 2,
                            SenderId = 9,
                            SenderUserName = "Vern_Dooley"
                        },
                        new
                        {
                            Id = 6,
                            Body = "SMTP navigating open-source Small Rubber Chips Producer Director application Licensed Soft Soap Developer experiences",
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 990, DateTimeKind.Utc).AddTicks(8893),
                            IsRead = true,
                            ReceiverId = 3,
                            SenderId = 1,
                            SenderUserName = "Keely41"
                        },
                        new
                        {
                            Id = 7,
                            Body = "Practical Fresh Sausages Personal Loan Account navigate Indiana AI Robust Auto Loan Account Gorgeous monitoring Directives",
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 990, DateTimeKind.Utc).AddTicks(8964),
                            IsRead = true,
                            ReceiverId = 2,
                            SenderId = 3,
                            SenderUserName = "Ettie.Schaefer"
                        },
                        new
                        {
                            Id = 8,
                            Body = "olive Leone Fresh multi-byte Indiana Associate lavender Brooks eco-centric Practical Plastic Shoes",
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 990, DateTimeKind.Utc).AddTicks(9033),
                            IsRead = false,
                            ReceiverId = 10,
                            SenderId = 8,
                            SenderUserName = "Wilhelm.Altenwerth92"
                        },
                        new
                        {
                            Id = 9,
                            Body = "help-desk circuit Practical Hills Lithuania South Carolina pink Washington strategize olive",
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 990, DateTimeKind.Utc).AddTicks(9075),
                            IsRead = true,
                            ReceiverId = 8,
                            SenderId = 6,
                            SenderUserName = "Dulce.Macejkovic64"
                        },
                        new
                        {
                            Id = 10,
                            Body = "Data transmitting Ville efficient Avon methodical Bedfordshire lime Gold Awesome",
                            ChatId = 1,
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 990, DateTimeKind.Utc).AddTicks(9125),
                            IsRead = false,
                            ReceiverId = 4,
                            SenderId = 8,
                            SenderUserName = "Ettie.Schaefer"
                        });
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.MessageFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("MessageFiles", (string)null);
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tokens", (string)null);
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscordLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRemote")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Roles")
                        .HasColumnType("int");

                    b.Property<string>("SpotifyLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegramLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "New Waldofort",
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 1, 960, DateTimeKind.Utc).AddTicks(4922),
                            Description = "solid state hacking alliance THX Clothing, Movies & Tools override Money Market Account Wisconsin Virgin Islands, U.S. Borders",
                            DiscordLink = "america.biz",
                            Email = "Larue_Gottlieb72@gmail.com",
                            InstagramLink = "america.biz",
                            IsRemote = false,
                            Password = "$2a$11$lcNSBUt8ZZmiP/Jt2hkSUu2yJw5UPov9E4ZKHlbt5NEVh2UvuDyGS",
                            Roles = 128,
                            SpotifyLink = "america.biz",
                            TelegramLink = "america.biz",
                            Username = "Ettie.Schaefer"
                        },
                        new
                        {
                            Id = 2,
                            City = "Taureanton",
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 75, DateTimeKind.Utc).AddTicks(6051),
                            Description = "Ridge bandwidth Key Secured circuit Incredible Incredible Rubber Computer networks Greens Michigan",
                            DiscordLink = "marjory.info",
                            Email = "Leonard.Lang47@gmail.com",
                            InstagramLink = "marjory.info",
                            IsRemote = true,
                            Password = "$2a$11$b.nepnCW8B6v/QjS/vBhZOJB9Qi6ym.DWQq5XKqAyVB7SlVRsfSV2",
                            Roles = 0,
                            SpotifyLink = "marjory.info",
                            TelegramLink = "marjory.info",
                            Username = "Alexanne_Lowe"
                        },
                        new
                        {
                            Id = 3,
                            City = "New Forest",
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 191, DateTimeKind.Utc).AddTicks(37),
                            Description = "Small Steel Shirt Movies & Clothing Fantastic Plastic Hat Accounts Rubber RSS attitude iterate 1080p Saint Kitts and Nevis",
                            DiscordLink = "katheryn.name",
                            Email = "Keenan.Batz@gmail.com",
                            InstagramLink = "katheryn.name",
                            IsRemote = true,
                            Password = "$2a$11$CHRIxSMz6VjGskVAZE/rZ.ULDxoOqhv3d34dF/kLrZYO2MxtqH9GG",
                            Roles = 128,
                            SpotifyLink = "katheryn.name",
                            TelegramLink = "katheryn.name",
                            Username = "Jaylan.Hackett35"
                        },
                        new
                        {
                            Id = 4,
                            City = "South Havenshire",
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 307, DateTimeKind.Utc).AddTicks(5338),
                            Description = "Generic Beauty Berkshire matrix Vision-oriented overriding indexing Greenland Intelligent Mandatory",
                            DiscordLink = "lynn.net",
                            Email = "Hector.Quigley46@yahoo.com",
                            InstagramLink = "lynn.net",
                            IsRemote = false,
                            Password = "$2a$11$OrQCVjJQ2cEC1WNued4Se.lZ8ksbt4qY9C419JPe1nDVLm0FJ3BBW",
                            Roles = 128,
                            SpotifyLink = "lynn.net",
                            TelegramLink = "lynn.net",
                            Username = "Odessa.Hodkiewicz76"
                        },
                        new
                        {
                            Id = 5,
                            City = "Christiansenfurt",
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 421, DateTimeKind.Utc).AddTicks(150),
                            Description = "Reunion Investment Account Platinum white withdrawal withdrawal Markets azure Handmade Concrete Chips extensible",
                            DiscordLink = "daphne.com",
                            Email = "Lorena53@hotmail.com",
                            InstagramLink = "daphne.com",
                            IsRemote = false,
                            Password = "$2a$11$FeLQq1nB9CNoZINu6wby5ep6xUvjzb64AfHEaAxmpweyRRIUcWu9C",
                            Roles = 4,
                            SpotifyLink = "daphne.com",
                            TelegramLink = "daphne.com",
                            Username = "Dulce.Macejkovic64"
                        },
                        new
                        {
                            Id = 6,
                            City = "West Joyce",
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 533, DateTimeKind.Utc).AddTicks(9999),
                            Description = "users 24/365 Handcrafted Steel Shirt International Investment Account Checking Account backing up Strategist Awesome override",
                            DiscordLink = "jonathon.name",
                            Email = "Esteban32@gmail.com",
                            InstagramLink = "jonathon.name",
                            IsRemote = false,
                            Password = "$2a$11$Lw236jYGv9VDPg/4jBx/neisODuBJ/l9BWs2wt4.sX8GZIbYYBqCy",
                            Roles = 1,
                            SpotifyLink = "jonathon.name",
                            TelegramLink = "jonathon.name",
                            Username = "Keely41"
                        },
                        new
                        {
                            Id = 7,
                            City = "West Magnus",
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 647, DateTimeKind.Utc).AddTicks(620),
                            Description = "invoice protocol invoice bi-directional connect Plains transform Mill Tasty integrated",
                            DiscordLink = "arvel.biz",
                            Email = "Jillian.Reynolds@yahoo.com",
                            InstagramLink = "arvel.biz",
                            IsRemote = false,
                            Password = "$2a$11$zYqBdic7z5FTZ3OHoT7OGurCB8V23RM9.iKDR0WYR9KZajxbdxkiy",
                            Roles = 1,
                            SpotifyLink = "arvel.biz",
                            TelegramLink = "arvel.biz",
                            Username = "Vern_Dooley"
                        },
                        new
                        {
                            Id = 8,
                            City = "South Bill",
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 759, DateTimeKind.Utc).AddTicks(3705),
                            Description = "Cordoba Oro Valleys Roads transition hacking quantifying Analyst Avon SAS Garden, Grocery & Electronics",
                            DiscordLink = "baby.com",
                            Email = "Estell_Berge@yahoo.com",
                            InstagramLink = "baby.com",
                            IsRemote = false,
                            Password = "$2a$11$ojovfo6I4rsjH619uzYKvOyw7looonH3.nTWumW2WpzyBPYM1IXNm",
                            Roles = 2,
                            SpotifyLink = "baby.com",
                            TelegramLink = "baby.com",
                            Username = "Wilhelm.Altenwerth92"
                        },
                        new
                        {
                            Id = 9,
                            City = "Lake Calebview",
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 872, DateTimeKind.Utc).AddTicks(2333),
                            Description = "task-force lime Generic Cameroon Tasty Soft Shirt parsing circuit Bedfordshire bus teal",
                            DiscordLink = "arnold.biz",
                            Email = "Nelda.Konopelski@gmail.com",
                            InstagramLink = "arnold.biz",
                            IsRemote = true,
                            Password = "$2a$11$p10VjrH1./TBVhUWMR3ele6xLU3/8jwnVF98qFZKjVkQsPlQfqlo.",
                            Roles = 256,
                            SpotifyLink = "arnold.biz",
                            TelegramLink = "arnold.biz",
                            Username = "Muriel85"
                        },
                        new
                        {
                            Id = 10,
                            City = "Carolville",
                            CreatedAt = new DateTime(2024, 1, 3, 9, 22, 2, 986, DateTimeKind.Utc).AddTicks(160),
                            Description = "secondary ADP Wells Aruban Guilder Rest cohesive XML asymmetric Gorgeous Cotton Fish navigate",
                            DiscordLink = "vernice.info",
                            Email = "Elinore.Kling@gmail.com",
                            InstagramLink = "vernice.info",
                            IsRemote = false,
                            Password = "$2a$11$4/6ARN5d1Zs/uQNJ.hFkeu1RrlhFBt7.CgCe2gi7A1NFvsGNAuvH2",
                            Roles = 32,
                            SpotifyLink = "vernice.info",
                            TelegramLink = "vernice.info",
                            Username = "Aletha52"
                        });
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.ChatMember", b =>
                {
                    b.HasOne("ChatTeamChallenge.Domain.Apartments.Chat", "Chat")
                        .WithMany("Members")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ChatTeamChallenge.Domain.Apartments.User", "User")
                        .WithMany("Members")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.Message", b =>
                {
                    b.HasOne("ChatTeamChallenge.Domain.Apartments.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.MessageFile", b =>
                {
                    b.HasOne("ChatTeamChallenge.Domain.Apartments.Message", "Message")
                        .WithMany("Files")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.RefreshToken", b =>
                {
                    b.HasOne("ChatTeamChallenge.Domain.Apartments.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.Chat", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.Message", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("ChatTeamChallenge.Domain.Apartments.User", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
